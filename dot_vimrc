set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Github Bundles
Bundle 'gmarik/vundle'
Bundle 'kien/ctrlp.vim'
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/syntastic'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-sensible'
Bundle 'tpope/vim-abolish'
Bundle 'tpope/vim-unimpaired'
Bundle 'bling/vim-airline'
Bundle 'vim-scripts/vimwiki'
Bundle 'sjl/badwolf'
Bundle 'sjl/gundo.vim'
"Bundle 'ervandew/supertab'
Bundle 'vim-scripts/taglist.vim'
Bundle 'rking/ag.vim'
Bundle 'slim-template/vim-slim'
Bundle 'othree/html5.vim'
Bundle 'Shougo/neocomplcache.vim'
Bundle 'wikitopian/hardmode'

" Dash
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'
nmap <silent><leader>vd :Dash<CR>

" Haskell
Bundle 'eagletmt/ghcmod-vim'
Bundle 'dag/vim2hs'
Bundle 'ujihisa/neco-ghc'
Bundle 'Shougo/vimproc'
Bundle 'Twinside/vim-haskellFold'
autocmd BufWritePost *.hs GhcModCheckAndLintAsync

" Erlang
Bundle 'oscarh/vimerl'

" Elixir
Bundle 'elixir-lang/vim-elixir'
Bundle 'mattonrails/vim-mix.git'
autocmd BufRead,BufNewFile *.eex set filetype = mason
" Python
Bundle 'davidhalter/jedi-vim'
Bundle 'klen/python-mode'

" Javascript
Bundle 'nono/vim-handlebars'

" Ruby
Bundle 'vim-ruby/vim-ruby'
Bundle 'tpope/vim-rails.git'
Bundle 'kchmck/vim-coffee-script'
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1

" Style
filetype plugin indent on     " required!
highlight Pmenu ctermbg=238 gui=bold

let g:pymode_rope = 0

" Force vim-rails to work with neocomplcache
let g:neocomplcache_force_overwrite_completefunc = 1
let g:neocomplcache_enable_at_startup = 1
let g:neocomplcache_enable_smart_case = 1
let g:neocomplcache_enable_camel_case_completion = 1
let g:neocomplcache_enable_underbar_completion = 1
let g:neocomplcache_min_syntax_length = 3 
"let g:syntastic_html_tidy_ignore_errors=[" proprietary attribute \"ng-"]
let g:syntastic_mode_map={ 'mode': 'active', 'active_filetypes': [], 'passive_filetypes': ['html', 'vimwiki', 'vim'] }

set vb
set guifont=Menlo_Regular:h12
set guioptions-=T  "remove toolbar
set t_Co=256
set expandtab
set shiftwidth=2
set softtabstop=2
set ignorecase
set smartcase
set hlsearch
set incsearch
set rnu
set number
set background=dark
set list listchars=tab:>>,eol:¬,trail:·
set encoding=utf-8 " Necessary to show Unicode glyphs
set wildmenu
set wildmode=full
set omnifunc=syntaxcomplete#Complete
set clipboard=unnamed
set spell spelllang=en_us

noremap <silent> <Right> <c-w>l
noremap <silent> <Left> <c-w>h
noremap <silent> <Up> <c-w>k
noremap <silent> <Down> <c-w>j

let mapleader = ','
noremap <leader>f :CtrlP<CR>
noremap <silent> <leader>c mpgg=G<CR>:%s/\s\+$//g<CR>`p
noremap <leader>d :NERDTreeToggle<CR>
noremap <leader>b :CtrlPBuffer<CR>
noremap <leader>t :TlistToggle<CR>
noremap <leader>u :GundoToggle<CR>
noremap <leader>w :w<CR>
noremap <leader>s :Ag 
noremap <leader>. :e ~/.vimrc<CR>

syntax enable
colorscheme badwolf

let ruby_fold = 1

" Clear the search buffer when hitting return
function! MapCR()
  nnoremap <leader><cr> :nohlsearch<cr>
endfunction
call MapCR()

" Use space to toggle folds
nnoremap <Space> za

" Make vim very magic
" nnoremap / /\v
